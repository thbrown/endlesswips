{"version":3,"sources":["webpack:///./src/pages/aoe2-de-rating-charts/admin.js","webpack:///./src/components/spinner.js"],"names":["Admin","props","state","configTwitchChannelId","undefined","configForceBits","configPassword","creditTwitchChannelId","creditTwitchUserId","creditValue","creditPassword","grantCredit","a","e","console","log","JSON","stringify","password","this","command","type","data","bitsValue","bodyChannelId","bodyUserId","windowId","preventDefault","fetch","method","cache","credentials","headers","Accept","body","response","status","setState","modal","executing","text","then","error","errorMessage","bind","updateConfiguration","forceBits","componentDidMount","render","location","pathname","title","style","textAlign","for","id","name","placeholder","onChange","target","value","min","className","onClick","checked","React","Component","Spinner"],"mappings":"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","file":"component---src-pages-aoe-2-de-rating-charts-admin-js-a6b70620d0148734b3e2.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Layout from \"../../components/layout\";\r\nimport SEO from \"../../components/seo\";\r\nimport Spinner from \"../../components/spinner\";\r\n\r\nconst REQUIRED_QUERY_PARAMS = [\"state\", \"code\", \"scope\"];\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      configTwitchChannelId: undefined,\r\n      configForceBits: false,\r\n      configPassword: undefined,\r\n      creditTwitchChannelId: undefined,\r\n      creditTwitchUserId: undefined,\r\n      creditValue: 0,\r\n      creditPassword: undefined,\r\n    };\r\n\r\n    this.grantCredit = async function (e) {\r\n      console.log(\"I AM HERE\");\r\n      console.log(\r\n        \"PIZZA\",\r\n        JSON.stringify({\r\n          password: this.state.creditPassword,\r\n          command: {\r\n            type: \"ADMIN_CREDIT\",\r\n            data: { bitsValue: this.state.creditValue },\r\n          },\r\n          bodyChannelId: this.state.creditTwitchChannelId,\r\n          bodyUserId: this.state.creditTwitchUserId,\r\n          windowId: \"admin-console\",\r\n        })\r\n      );\r\n      //console.log(this.state);\r\n      e.preventDefault();\r\n      let response = await fetch(\r\n        \"https://us-central1-age-of-empires-307521.cloudfunctions.net/twitch-rating-charts-config\",\r\n        {\r\n          method: \"POST\",\r\n          cache: \"no-cache\",\r\n          credentials: \"same-origin\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            password: this.state.creditPassword,\r\n            command: {\r\n              type: \"ADMIN_CREDIT\",\r\n              data: { bitsValue: this.state.creditValue },\r\n            },\r\n            bodyChannelId: this.state.creditTwitchChannelId,\r\n            bodyUserId: this.state.creditTwitchUserId,\r\n            windowId: \"admin-console\",\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.status == 204) {\r\n        console.log(\"SUCCESS!\");\r\n        this.setState({\r\n          modal: \"config-success\",\r\n          executing: false,\r\n        });\r\n      } else {\r\n        response.text().then(\r\n          function (text) {\r\n            console.error(text);\r\n            this.setState({\r\n              modal: \"config-fail\",\r\n              executing: false,\r\n              errorMessage: text,\r\n            });\r\n          }.bind(this)\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        executing: false,\r\n      });\r\n\r\n      return false;\r\n    }.bind(this);\r\n\r\n    this.updateConfiguration = async function (e) {\r\n      console.log(this.state);\r\n      e.preventDefault();\r\n      let response = await fetch(\r\n        \"https://us-central1-age-of-empires-307521.cloudfunctions.net/twitch-rating-charts-config\",\r\n        {\r\n          method: \"POST\",\r\n          cache: \"no-cache\",\r\n          credentials: \"same-origin\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            password: this.state.configPassword,\r\n            command: {\r\n              type: \"ADMIN_CONFIG\",\r\n              data: { forceBits: this.state.configForceBits },\r\n            },\r\n            bodyUserId: \"N/A\", // Shouldn't be required but it is\r\n            bodyChannelId: this.state.configTwitchChannelId,\r\n            windowId: \"admin-console\",\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (response.status == 204) {\r\n        console.log(\"SUCCESS!\");\r\n        this.setState({\r\n          modal: \"config-success\",\r\n          executing: false,\r\n        });\r\n      } else {\r\n        response.text().then(\r\n          function (text) {\r\n            console.error(text);\r\n            this.setState({\r\n              modal: \"config-fail\",\r\n              executing: false,\r\n              errorMessage: text,\r\n            });\r\n          }.bind(this)\r\n        );\r\n      }\r\n\r\n      this.setState({\r\n        executing: false,\r\n      });\r\n\r\n      return false;\r\n    }.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Layout location={{ pathname: \"/404\" }}>\r\n        <SEO title=\"Administration\" />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <form>\r\n            <fieldset>\r\n              <legend>\r\n                <h3>Grant Credit</h3>\r\n              </legend>\r\n\r\n              <div>\r\n                <label for=\"userid\">User Id</label>\r\n                <div>\r\n                  <input\r\n                    id=\"userid\"\r\n                    name=\"userid\"\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        creditTwitchUserId: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"channelIdCredit\">Channel Id</label>\r\n                <div>\r\n                  <input\r\n                    id=\"channelIdCredit\"\r\n                    name=\"channelIdCredit\"\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        creditTwitchChannelId: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"bitsValue\">Bits Value</label>\r\n                <div>\r\n                  <input\r\n                    name=\"bitsValue\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        creditValue: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"passwordInputCredit\">Password</label>\r\n                <div>\r\n                  <input\r\n                    id=\"passwordInputCredit\"\r\n                    name=\"passwordInputCredit\"\r\n                    type=\"password\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        creditPassword: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <button className=\"button\" onClick={this.grantCredit}>\r\n                <div className=\"button-text\">Submit</div>\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n          <hr></hr>\r\n          <form>\r\n            <fieldset>\r\n              <legend>\r\n                <h3>Force Bits</h3>\r\n              </legend>\r\n\r\n              <div>\r\n                <label for=\"channelId\">Channel Id</label>\r\n                <div>\r\n                  <input\r\n                    id=\"channelId\"\r\n                    name=\"channelId\"\r\n                    type=\"text\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        configTwitchChannelId: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"forceBits\">Force Bits</label>\r\n                <div>\r\n                  <input\r\n                    name=\"forceBits\"\r\n                    type=\"checkbox\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        configForceBits: e.target.checked,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label for=\"passwordinput\">Password</label>\r\n                <div>\r\n                  <input\r\n                    id=\"passwordinput\"\r\n                    name=\"passwordinput\"\r\n                    type=\"password\"\r\n                    onChange={function (e) {\r\n                      this.setState({\r\n                        configPassword: e.target.value,\r\n                      });\r\n                    }.bind(this)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <button className=\"button\" onClick={this.updateConfiguration}>\r\n                <div className=\"button-text\">Submit</div>\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\n\r\nimport \"./spinner.css\";\r\n\r\nclass Spinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"loading\" style={this.props.style}>\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner-dot\"></div>\r\n          <div className=\"spinner-dot\"></div>\r\n          <div className=\"spinner-dot\"></div>\r\n          <div className=\"spinner-dot\"></div>\r\n          <div className=\"spinner-dot\"></div>\r\n          <div className=\"spinner-dot\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n"],"sourceRoot":""}